#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <cstdio>
#include <windows.h>
using namespace std;

int main() {
	string backpack [30];
	ifstream in;

	in.open("个人存档.txt");
	if (in.fail()) {
		cout << "请在游戏目录创建 个人存档.txt ";
		exit(1);
	}//这一段可以改为 exit(in.fail());

	int bengdai;
	in >> bengdai;
	in.close();
	double Verson = 0.01;
	int health = 100;
	int armor = 0;
	int chose_game;
	for (int i = bengdai - i ; i >= 0 ; i--) {
		backpack [i] = "绷带";
	}
	cout << "欢迎来到简易版EFT \n V" << Verson << endl;
	cout << "" << endl;
	cout << "请选择你的功能:" << endl;
	cout << "" << endl;
	cout << "1.物资搜索" << endl;
	cout << "2.查看仓库" << endl;
	cout << "3.exit" << endl;
	cout << "4.查看更新日志" << endl;
	cin >> chose_game;
	switch (chose_game) {
		case 1: {
			srand((unsigned)time(NULL));
			int how_many = rand() % 10;
			cout << "已进入" << endl;
			cout << "已返回，带回了" << how_many << "绷带" << endl;
			bengdai += how_many;
#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <cstdio>
#include <windows.h>
#include <sys/time.h>
#pragma GCC optimize(2)
using namespace std;


int main() {

	srand((unsigned)time(NULL));
	int bengdai, health, armor, attack, chose_game, stone_sword, backpack, find_bengdai, game_bengdai; //声明变量，声明背包
	int chess_cont = rand () % 10;
	int stone_sword_random = rand () % 100;
	int  storage_chose = 0;
	string  storage [30];
	string Version = "0.0.1B";

	fstream fs;
	fs.open("data.txt", ios::in);

	if (!fs) {
		cout << "创建存档中!" << endl;
		//创建文件
		ofstream fout("data.txt", ios::trunc);
		fout << "0" << endl << "0" << endl << "0" << endl;
		fout.close();
	}

	cout << "读取中..." << endl;
	ifstream infile("data.txt");
	infile >> bengdai >> health;
	cout << "读取成功" << endl;
	for (int i = bengdai - i ; i >= 0 ; i--) {
		storage [i] = "绷带";
	}

	system("cls");
	cout << " 欢迎来到新游戏 \n V" << Version << endl; //开始界面
	cout << "" << endl;
	cout << "请选择你的功能:" << endl;
	cout << "" << endl;
	cout << "1.物资搜索" << endl;
	cout << "2.查看仓库" << endl;
	cout << "3.exit" << endl;
	cout << "4.查看更新日志" << endl;
	cout << "5.人物属性" << endl;

	cin >> chose_game;
	switch (chose_game) {
		case 1: {
			system("cls");
			if (health <= 30) {
				char really;
				cout << "你的血量低于30，确定进入吗？(Y/N)";
				cin >> really;
				system("cls");
				if (really = 'Y') {
					cout << "正在进入" << endl;
					cout << "进入成功！" << endl;
					system("cls");
					for (; chess_cont > 0; chess_cont--) {
						for (int i = 0; i <= 3; i++) {
							cout << "搜索物品中|" << endl;
							Sleep(200);
							system("cls");
							cout << "搜索物品中/" << endl;
							Sleep(200);
							system("cls");
							cout << "搜索物品中-" << endl;
							Sleep(200);
							system("cls");
							cout << "搜索物品中\ " << endl;
							Sleep(200);
							system("cls");
						}
						find_bengdai = rand () % 10;
						cout << "已找到 " << find_bengdai << " 绷带" << endl;
						game_bengdai += find_bengdai;
						Sleep(200);
						if (game_bengdai > 30) {
							cout << "塞不下了,已丢弃 " << bengdai - 30 << " 绷带" << endl;
							game_bengdai = 30;
						}
					}
					cout << "已回藏身处" << endl;
					bengdai += game_bengdai;
					if (bengdai > 30) {
						cout << "塞不下了,已丢弃 " << game_bengdai + bengdai - 30 << " 绷带" << endl;
						bengdai = 30;

					}

				} else {
					return 0;
				}
			}
			ofstream outfile("data.txt", ios::trunc);
			outfile << bengdai << endl << health << endl;
			return 0;
		}

	case 2:
		system("cls");
		cout << "" << endl;
		for (int i = 29 ; i >= 0 ; i--) {
			cout << 30 - i <<  storage [i] << endl;
		}
		cout << "" << endl;
		cout << "目前道具" << endl;
		cout << "" << endl;
		cout << "1.绷带" << endl;
		cout << "2.不用道具" << endl;
		cout << "输入序号以使用道具" << endl;
		cin >>  storage_chose;
		switch ( storage_chose) {
			case 1: {
					if (health < 100) {
						cout << "使用成功,人物增加 10 health" << endl;
						health += 10;
						bengdai -= 1;
						ofstream outfile("data.txt", ios::trunc);
						outfile << bengdai << endl << health << endl;
					} else {
						cout << "使用失败,人物最高血量为100" << endl;
					}


					break;
				}
			default:
				return 0;
		}

		return 0;
	case 3:
		return 0;
	case 4:
		system("cls");
		cout << "优化搜索物资交互,增加敌人（用的是我的ikun大战小黑子的代码）后续会增加更多道具" << endl;
		cout << "目前为测试版Beta,不代表最终品质" << endl;
		cout << "有什么Bug请反馈" << endl;
		cout << "代码优化，更具可读性" << endl;
		cout << "更换了更稳定的备份功能" << endl;
		break;
	case 5:
		system("cls");
		cout << "人物血量为：" << health << endl;


}
}
			return 0;
		}

		case 2:
			cout << "" << endl;
			for (int i = 29 ; i >= 0 ; i--) {
				cout << 30 - i << backpack [i] << endl;
			}
			return 0;
		case 3:
			return 0;
		case 4:
			cout << "目前物资搜索没做好，进去直接带物资 \n 我那打怪的文件不见了会重新写 \n 目前为测试版请见谅" << endl;
	}
}
